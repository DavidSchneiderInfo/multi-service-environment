version: '3'
services:
  ingress:
    image: davidschneiderinfo/nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - '${NGINX_PORT:-80}:80'
    volumes:
      - ./config/ingress/default.conf:/etc/nginx/conf.d/default.conf
      - ./logs/ingress:/var/log/nginx
    networks:
      - service-network
  blog-nginx:
    image: davidschneiderinfo/blog-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./apps/blog:/var/www
      - ./logs/blog-nginx:/var/log/nginx
    networks:
      - service-network
    depends_on:
      - blog-php
    links:
      - "blog-php:php"
  blog-php:
    image: davidschneiderinfo/blog-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - ./apps/blog:/var/www
      - ./logs/blog-php:/var/www/storage/logs
    networks:
      - service-network
  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'service-mysql:/var/lib/mysql'
    networks:
      - service-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'service-redis:/data'
    networks:
      - service-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - service-network
  npm:
    image: davidschneiderinfo/node
    volumes:
      - ./apps/blog:/var/www
  composer:
    image: davidschneiderinfo/composer
    volumes:
      - ./apps/blog:/var/www
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    container_name: jenkins
    ports:
      - '8080:8080'
      - '50000:50000'
    volumes:
      - ./.jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/local/bin/docker
    networks:
      - service-network
  agent:
    build:
      context: ./docker/builder
      dockerfile: Dockerfile
    image: davidschneiderinfo/jenkins-builder
    privileged: true
    user: root
    container_name: agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/local/bin/docker
    expose:
      - 22
    environment:
      - "JENKINS_AGENT_SSH_PUBKEY=${JENKINS_AGENT_SSH_PUBKEY}"
    networks:
      - service-network
networks:
  service-network:
    driver: bridge
volumes:
  service-mysql:
    driver: local
  service-redis:
    driver: local
